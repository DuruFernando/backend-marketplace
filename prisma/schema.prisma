// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  name      String
  phone     String    @unique
  email     String    @unique
  password  String
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  products      Product[]
  ProductsViews ProductView[]

  @@map("users")
}

model Category {
  id        String    @id @default(uuid())
  title     String
  slug      String
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  products  Product[]

  @@map("categories")
}

enum Status {
  available
  sold
  cancelled
}

model Product {
  id           String    @id @default(uuid())
  title        String
  description  String
  priceInCents Int       @map("price_in_cents")
  status       Status    @default(available)
  soldAt       DateTime? @map("sold_at")
  availableAt  DateTime? @default(now()) @map("available_at")
  createdAt    DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime? @updatedAt @map("updated_at")
  ownerId      String    @map("owner_id")
  categoryId   String    @map("category_id")

  owner         User          @relation(fields: [ownerId], references: [id])
  category      Category      @relation(fields: [categoryId], references: [id])
  ProductsViews ProductView[]

  @@map("products")
}

model ProductView {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now()) @map("created_at")
  viewerId  String   @map("viewer_id")
  productId String   @map("product_id")

  viewer  User    @relation(fields: [viewerId], references: [id])
  product Product @relation(fields: [productId], references: [id])

  @@map("products_views")
}
